Agent pid 158615
Identity added: /home/ec2-user/.ssh/my-key-pair (tluz@Furymuse)
No config file found; using defaults

PLAY [Setup Kubernetes Cluster] ************************************************

TASK [Gathering Facts] *********************************************************
[WARNING]: Platform linux on host master is using the discovered Python
interpreter at /usr/bin/python3.9, but future installation of another Python
interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-
core/2.15/reference_appendices/interpreter_discovery.html for more information.
ok: [master]

TASK [Get private IP using Ansible fact] ***************************************
ok: [master] => {"ansible_facts": {"master_private_ip": "10.1.1.225"}, "changed": false}

TASK [Print private IP] ********************************************************
ok: [master] => {
    "msg": "The private IP of the target server is: 10.1.1.225"
}

TASK [Get public IP using curl] ************************************************
changed: [master] => {"changed": true, "cmd": ["curl", "-s", "ifconfig.me"], "delta": "0:00:00.161277", "end": "2024-07-31 20:28:31.860627", "msg": "", "rc": 0, "start": "2024-07-31 20:28:31.699350", "stderr": "", "stderr_lines": [], "stdout": "16.171.215.149", "stdout_lines": ["16.171.215.149"]}

TASK [Set master public IP fact] ***********************************************
ok: [master] => {"ansible_facts": {"master_public_ip": "16.171.215.149"}, "changed": false}

TASK [Print public IP] *********************************************************
ok: [master] => {
    "msg": "The public IP of the target server is: 16.171.215.149"
}

TASK [Update all packages] *****************************************************
ok: [master] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}

TASK [Disable swap] ************************************************************
changed: [master] => {"changed": true, "cmd": ["swapoff", "-a"], "delta": "0:00:00.031400", "end": "2024-07-31 20:28:44.655993", "msg": "", "rc": 0, "start": "2024-07-31 20:28:44.624593", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Load kernel modules] *****************************************************
changed: [master] => {"changed": true, "checksum": "34e17debf4a4a1b5743871ab975af918135df3bd", "dest": "/etc/modules-load.d/k8s.conf", "gid": 0, "group": "root", "md5sum": "bf4c83b6e00f0135e0b079430a390e7e", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 21, "src": "/home/ec2-user/.ansible/tmp/ansible-tmp-1722457724.9358282-158840-54148972982148/source", "state": "file", "uid": 0}

TASK [Load kernel modules immediately] *****************************************
changed: [master] => {"changed": true, "cmd": ["modprobe", "overlay"], "delta": "0:00:00.016923", "end": "2024-07-31 20:28:48.061280", "msg": "", "rc": 0, "start": "2024-07-31 20:28:48.044357", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [command] *****************************************************************
changed: [master] => {"changed": true, "cmd": ["modprobe", "br_netfilter"], "delta": "0:00:00.068295", "end": "2024-07-31 20:28:48.821188", "msg": "", "rc": 0, "start": "2024-07-31 20:28:48.752893", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set system configurations for Kubernetes] ********************************
changed: [master] => {"changed": true, "checksum": "4b56c44339db7752e7312da6ab12ff17ad6b95ee", "dest": "/etc/sysctl.d/k8s.conf", "gid": 0, "group": "root", "md5sum": "1860bedbd41fa91e465e58b8b58a6043", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 120, "src": "/home/ec2-user/.ansible/tmp/ansible-tmp-1722457729.0984147-158918-64654352021727/source", "state": "file", "uid": 0}

TASK [Apply sysctl params without reboot] **************************************
changed: [master] => {"changed": true, "cmd": ["sysctl", "--system"], "delta": "0:00:00.014398", "end": "2024-07-31 20:28:51.027741", "msg": "", "rc": 0, "start": "2024-07-31 20:28:51.013343", "stderr": "sysctl: setting key \"net.ipv4.conf.all.rp_filter\": Invalid argument\nsysctl: setting key \"net.ipv4.conf.all.accept_source_route\": Invalid argument\nsysctl: setting key \"net.ipv4.conf.all.promote_secondaries\": Invalid argument", "stderr_lines": ["sysctl: setting key \"net.ipv4.conf.all.rp_filter\": Invalid argument", "sysctl: setting key \"net.ipv4.conf.all.accept_source_route\": Invalid argument", "sysctl: setting key \"net.ipv4.conf.all.promote_secondaries\": Invalid argument"], "stdout": "* Applying /etc/sysctl.d/00-defaults.conf ...\nkernel.printk = 8 4 1 7\nkernel.panic = 5\nnet.ipv4.neigh.default.gc_thresh1 = 0\nnet.ipv6.neigh.default.gc_thresh1 = 0\nnet.ipv4.neigh.default.gc_thresh2 = 15360\nnet.ipv6.neigh.default.gc_thresh2 = 15360\nnet.ipv4.neigh.default.gc_thresh3 = 16384\nnet.ipv6.neigh.default.gc_thresh3 = 16384\nnet.ipv4.tcp_wmem = 4096 20480 4194304\nnet.ipv4.ip_default_ttl = 127\nkernel.unprivileged_bpf_disabled = 1\n* Applying /usr/lib/sysctl.d/10-default-yama-scope.conf ...\nkernel.yama.ptrace_scope = 0\n* Applying /usr/lib/sysctl.d/50-coredump.conf ...\nkernel.core_pattern = |/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h\nkernel.core_pipe_limit = 16\nfs.suid_dumpable = 2\n* Applying /usr/lib/sysctl.d/50-default.conf ...\nkernel.sysrq = 16\nkernel.core_uses_pid = 1\nnet.ipv4.conf.default.rp_filter = 2\nnet.ipv4.conf.default.accept_source_route = 0\nnet.ipv4.conf.default.promote_secondaries = 1\nnet.ipv4.ping_group_range = 0 2147483647\nnet.core.default_qdisc = fq_codel\nfs.protected_hardlinks = 1\nfs.protected_symlinks = 1\nfs.protected_regular = 1\nfs.protected_fifos = 1\n* Applying /usr/lib/sysctl.d/50-libkcapi-optmem_max.conf ...\nnet.core.optmem_max = 81920\n* Applying /usr/lib/sysctl.d/50-pid-max.conf ...\nkernel.pid_max = 4194304\n* Applying /usr/lib/sysctl.d/60-amazon-linux-coredump.conf ...\nfs.suid_dumpable = 0\n* Applying /etc/sysctl.d/99-sysctl.conf ...\n* Applying /etc/sysctl.d/k8s.conf ...\nnet.bridge.bridge-nf-call-iptables = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward = 1\n* Applying /etc/sysctl.conf ...", "stdout_lines": ["* Applying /etc/sysctl.d/00-defaults.conf ...", "kernel.printk = 8 4 1 7", "kernel.panic = 5", "net.ipv4.neigh.default.gc_thresh1 = 0", "net.ipv6.neigh.default.gc_thresh1 = 0", "net.ipv4.neigh.default.gc_thresh2 = 15360", "net.ipv6.neigh.default.gc_thresh2 = 15360", "net.ipv4.neigh.default.gc_thresh3 = 16384", "net.ipv6.neigh.default.gc_thresh3 = 16384", "net.ipv4.tcp_wmem = 4096 20480 4194304", "net.ipv4.ip_default_ttl = 127", "kernel.unprivileged_bpf_disabled = 1", "* Applying /usr/lib/sysctl.d/10-default-yama-scope.conf ...", "kernel.yama.ptrace_scope = 0", "* Applying /usr/lib/sysctl.d/50-coredump.conf ...", "kernel.core_pattern = |/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h", "kernel.core_pipe_limit = 16", "fs.suid_dumpable = 2", "* Applying /usr/lib/sysctl.d/50-default.conf ...", "kernel.sysrq = 16", "kernel.core_uses_pid = 1", "net.ipv4.conf.default.rp_filter = 2", "net.ipv4.conf.default.accept_source_route = 0", "net.ipv4.conf.default.promote_secondaries = 1", "net.ipv4.ping_group_range = 0 2147483647", "net.core.default_qdisc = fq_codel", "fs.protected_hardlinks = 1", "fs.protected_symlinks = 1", "fs.protected_regular = 1", "fs.protected_fifos = 1", "* Applying /usr/lib/sysctl.d/50-libkcapi-optmem_max.conf ...", "net.core.optmem_max = 81920", "* Applying /usr/lib/sysctl.d/50-pid-max.conf ...", "kernel.pid_max = 4194304", "* Applying /usr/lib/sysctl.d/60-amazon-linux-coredump.conf ...", "fs.suid_dumpable = 0", "* Applying /etc/sysctl.d/99-sysctl.conf ...", "* Applying /etc/sysctl.d/k8s.conf ...", "net.bridge.bridge-nf-call-iptables = 1", "net.bridge.bridge-nf-call-ip6tables = 1", "net.ipv4.ip_forward = 1", "* Applying /etc/sysctl.conf ..."]}

TASK [Download containerd] *****************************************************
changed: [master] => {"changed": true, "checksum_dest": null, "checksum_src": "8ee9ce35f17deb948a1cc885aa600f109e3e0835", "dest": "/tmp/containerd-1.6.2-linux-amd64.tar.gz", "elapsed": 1, "gid": 0, "group": "root", "md5sum": "6ef54e3dc7fc8f53a1b3f872bc4a39b4", "mode": "0644", "msg": "OK (42998577 bytes)", "owner": "root", "secontext": "unconfined_u:object_r:user_home_t:s0", "size": 42998577, "src": "/home/ec2-user/.ansible/tmp/ansible-tmp-1722457731.2221973-158956-59361550890112/tmpixvm9nm_", "state": "file", "status_code": 200, "uid": 0, "url": "https://github.com/containerd/containerd/releases/download/v1.6.2/containerd-1.6.2-linux-amd64.tar.gz"}

TASK [Extract containerd] ******************************************************
changed: [master] => {"changed": true, "dest": "/usr/local", "extract_results": {"cmd": ["/usr/bin/gtar", "--extract", "-C", "/usr/local", "-z", "-f", "/tmp/containerd-1.6.2-linux-amd64.tar.gz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "secontext": "system_u:object_r:usr_t:s0", "size": 131, "src": "/tmp/containerd-1.6.2-linux-amd64.tar.gz", "state": "directory", "uid": 0}

TASK [Install containerd service] **********************************************
changed: [master] => {"changed": true, "checksum_dest": null, "checksum_src": "1765fe17cc60008b68ae7b9676676f2a884192b5", "dest": "/etc/systemd/system/containerd.service", "elapsed": 0, "gid": 0, "group": "root", "md5sum": "223b9484c3959eecfcd5826031cbc34d", "mode": "0644", "msg": "OK (1251 bytes)", "owner": "root", "secontext": "system_u:object_r:systemd_unit_file_t:s0", "size": 1251, "src": "/home/ec2-user/.ansible/tmp/ansible-tmp-1722457740.1023908-159041-28042926815491/tmp3gqrwy95", "state": "file", "status_code": 200, "uid": 0, "url": "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"}

TASK [Enable and start containerd] *********************************************
changed: [master] => {"changed": true, "enabled": true, "name": "containerd", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "system.slice local-fs.target network.target systemd-journald.socket basic.target sysinit.target", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "0", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "yes", "DelegateControllers": "cpu cpuset io memory pids", "Description": "containerd container runtime", "DevicePolicy": "auto", "Documentation": "https://containerd.io", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; ignore_errors=yes ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; flags=ignore-failure ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/containerd.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "containerd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "process", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "infinity", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "infinity", "LimitMEMLOCKSoft": "infinity", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "65535", "LimitNOFILESoft": "65535", "LimitNPROC": "infinity", "LimitNPROCSoft": "infinity", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30446", "LimitSIGPENDINGSoft": "30446", "LimitSTACK": "10485760", "LimitSTACKSoft": "10485760", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "containerd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "continue", "OOMScoreAdjust": "-999", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "5s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "infinity", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "UtmpMode": "init", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}

TASK [Download runc] ***********************************************************
changed: [master] => {"changed": true, "checksum_dest": null, "checksum_src": "d283b806282faaccdb9d85e033ba964729ee2ddd", "dest": "/usr/local/sbin/runc", "elapsed": 1, "gid": 0, "group": "root", "md5sum": "08da42fb176e7d18c44f28cd81f6c68c", "mode": "0755", "msg": "OK (10684992 bytes)", "owner": "root", "secontext": "system_u:object_r:bin_t:s0", "size": 10684992, "src": "/home/ec2-user/.ansible/tmp/ansible-tmp-1722457744.0316615-159078-192492959658607/tmp_fffgao7", "state": "file", "status_code": 200, "uid": 0, "url": "https://github.com/opencontainers/runc/releases/download/v1.1.9/runc.amd64"}

TASK [Create directory for CNI plugins] ****************************************
changed: [master] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/opt/cni/bin", "secontext": "unconfined_u:object_r:usr_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [Download CNI plugins] ****************************************************
changed: [master] => {"changed": true, "checksum_dest": null, "checksum_src": "ce06fd51aa8ac270554afcc5f32857c30138f8b9", "dest": "/tmp/cni-plugins-linux-amd64-v1.1.1.tgz", "elapsed": 1, "gid": 0, "group": "root", "md5sum": "55803aa6bc327b8c21a4046a94408702", "mode": "0644", "msg": "OK (36336160 bytes)", "owner": "root", "secontext": "unconfined_u:object_r:user_home_t:s0", "size": 36336160, "src": "/home/ec2-user/.ansible/tmp/ansible-tmp-1722457747.6393976-159150-205473961282590/tmpnmy57dgg", "state": "file", "status_code": 200, "uid": 0, "url": "https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz"}

TASK [Extract CNI plugins] *****************************************************
changed: [master] => {"changed": true, "dest": "/opt/cni/bin", "extract_results": {"cmd": ["/usr/bin/gtar", "--extract", "-C", "/opt/cni/bin", "-z", "-f", "/tmp/cni-plugins-linux-amd64-v1.1.1.tgz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0775", "owner": "root", "secontext": "unconfined_u:object_r:usr_t:s0", "size": 16384, "src": "/tmp/cni-plugins-linux-amd64-v1.1.1.tgz", "state": "directory", "uid": 0}

TASK [Create containerd config directory] **************************************
changed: [master] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/containerd", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [Generate default containerd config] **************************************
changed: [master] => {"changed": true, "cmd": "containerd config default | tee /etc/containerd/config.toml", "delta": "0:00:00.053353", "end": "2024-07-31 20:29:15.700328", "msg": "", "rc": 0, "start": "2024-07-31 20:29:15.646975", "stderr": "", "stderr_lines": [], "stdout": "disabled_plugins = []\nimports = []\noom_score = 0\nplugin_dir = \"\"\nrequired_plugins = []\nroot = \"/var/lib/containerd\"\nstate = \"/run/containerd\"\ntemp = \"\"\nversion = 2\n\n[cgroup]\n  path = \"\"\n\n[debug]\n  address = \"\"\n  format = \"\"\n  gid = 0\n  level = \"\"\n  uid = 0\n\n[grpc]\n  address = \"/run/containerd/containerd.sock\"\n  gid = 0\n  max_recv_message_size = 16777216\n  max_send_message_size = 16777216\n  tcp_address = \"\"\n  tcp_tls_ca = \"\"\n  tcp_tls_cert = \"\"\n  tcp_tls_key = \"\"\n  uid = 0\n\n[metrics]\n  address = \"\"\n  grpc_histogram = false\n\n[plugins]\n\n  [plugins.\"io.containerd.gc.v1.scheduler\"]\n    deletion_threshold = 0\n    mutation_threshold = 100\n    pause_threshold = 0.02\n    schedule_delay = \"0s\"\n    startup_delay = \"100ms\"\n\n  [plugins.\"io.containerd.grpc.v1.cri\"]\n    device_ownership_from_security_context = false\n    disable_apparmor = false\n    disable_cgroup = false\n    disable_hugetlb_controller = true\n    disable_proc_mount = false\n    disable_tcp_service = true\n    enable_selinux = false\n    enable_tls_streaming = false\n    enable_unprivileged_icmp = false\n    enable_unprivileged_ports = false\n    ignore_image_defined_volumes = false\n    max_concurrent_downloads = 3\n    max_container_log_line_size = 16384\n    netns_mounts_under_state_dir = false\n    restrict_oom_score_adj = false\n    sandbox_image = \"k8s.gcr.io/pause:3.6\"\n    selinux_category_range = 1024\n    stats_collect_period = 10\n    stream_idle_timeout = \"4h0m0s\"\n    stream_server_address = \"127.0.0.1\"\n    stream_server_port = \"0\"\n    systemd_cgroup = false\n    tolerate_missing_hugetlb_controller = true\n    unset_seccomp_profile = \"\"\n\n    [plugins.\"io.containerd.grpc.v1.cri\".cni]\n      bin_dir = \"/opt/cni/bin\"\n      conf_dir = \"/etc/cni/net.d\"\n      conf_template = \"\"\n      ip_pref = \"\"\n      max_conf_num = 1\n\n    [plugins.\"io.containerd.grpc.v1.cri\".containerd]\n      default_runtime_name = \"runc\"\n      disable_snapshot_annotations = true\n      discard_unpacked_layers = false\n      ignore_rdt_not_enabled_errors = false\n      no_pivot = false\n      snapshotter = \"overlayfs\"\n\n      [plugins.\"io.containerd.grpc.v1.cri\".containerd.default_runtime]\n        base_runtime_spec = \"\"\n        cni_conf_dir = \"\"\n        cni_max_conf_num = 0\n        container_annotations = []\n        pod_annotations = []\n        privileged_without_host_devices = false\n        runtime_engine = \"\"\n        runtime_path = \"\"\n        runtime_root = \"\"\n        runtime_type = \"\"\n\n        [plugins.\"io.containerd.grpc.v1.cri\".containerd.default_runtime.options]\n\n      [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes]\n\n        [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc]\n          base_runtime_spec = \"\"\n          cni_conf_dir = \"\"\n          cni_max_conf_num = 0\n          container_annotations = []\n          pod_annotations = []\n          privileged_without_host_devices = false\n          runtime_engine = \"\"\n          runtime_path = \"\"\n          runtime_root = \"\"\n          runtime_type = \"io.containerd.runc.v2\"\n\n          [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]\n            BinaryName = \"\"\n            CriuImagePath = \"\"\n            CriuPath = \"\"\n            CriuWorkPath = \"\"\n            IoGid = 0\n            IoUid = 0\n            NoNewKeyring = false\n            NoPivotRoot = false\n            Root = \"\"\n            ShimCgroup = \"\"\n            SystemdCgroup = false\n\n      [plugins.\"io.containerd.grpc.v1.cri\".containerd.untrusted_workload_runtime]\n        base_runtime_spec = \"\"\n        cni_conf_dir = \"\"\n        cni_max_conf_num = 0\n        container_annotations = []\n        pod_annotations = []\n        privileged_without_host_devices = false\n        runtime_engine = \"\"\n        runtime_path = \"\"\n        runtime_root = \"\"\n        runtime_type = \"\"\n\n        [plugins.\"io.containerd.grpc.v1.cri\".containerd.untrusted_workload_runtime.options]\n\n    [plugins.\"io.containerd.grpc.v1.cri\".image_decryption]\n      key_model = \"node\"\n\n    [plugins.\"io.containerd.grpc.v1.cri\".registry]\n      config_path = \"\"\n\n      [plugins.\"io.containerd.grpc.v1.cri\".registry.auths]\n\n      [plugins.\"io.containerd.grpc.v1.cri\".registry.configs]\n\n      [plugins.\"io.containerd.grpc.v1.cri\".registry.headers]\n\n      [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors]\n\n    [plugins.\"io.containerd.grpc.v1.cri\".x509_key_pair_streaming]\n      tls_cert_file = \"\"\n      tls_key_file = \"\"\n\n  [plugins.\"io.containerd.internal.v1.opt\"]\n    path = \"/opt/containerd\"\n\n  [plugins.\"io.containerd.internal.v1.restart\"]\n    interval = \"10s\"\n\n  [plugins.\"io.containerd.internal.v1.tracing\"]\n    sampling_ratio = 1.0\n    service_name = \"containerd\"\n\n  [plugins.\"io.containerd.metadata.v1.bolt\"]\n    content_sharing_policy = \"shared\"\n\n  [plugins.\"io.containerd.monitor.v1.cgroups\"]\n    no_prometheus = false\n\n  [plugins.\"io.containerd.runtime.v1.linux\"]\n    no_shim = false\n    runtime = \"runc\"\n    runtime_root = \"\"\n    shim = \"containerd-shim\"\n    shim_debug = false\n\n  [plugins.\"io.containerd.runtime.v2.task\"]\n    platforms = [\"linux/amd64\"]\n    sched_core = false\n\n  [plugins.\"io.containerd.service.v1.diff-service\"]\n    default = [\"walking\"]\n\n  [plugins.\"io.containerd.service.v1.tasks-service\"]\n    rdt_config_file = \"\"\n\n  [plugins.\"io.containerd.snapshotter.v1.aufs\"]\n    root_path = \"\"\n\n  [plugins.\"io.containerd.snapshotter.v1.btrfs\"]\n    root_path = \"\"\n\n  [plugins.\"io.containerd.snapshotter.v1.devmapper\"]\n    async_remove = false\n    base_image_size = \"\"\n    discard_blocks = false\n    fs_options = \"\"\n    fs_type = \"\"\n    pool_name = \"\"\n    root_path = \"\"\n\n  [plugins.\"io.containerd.snapshotter.v1.native\"]\n    root_path = \"\"\n\n  [plugins.\"io.containerd.snapshotter.v1.overlayfs\"]\n    root_path = \"\"\n    upperdir_label = false\n\n  [plugins.\"io.containerd.snapshotter.v1.zfs\"]\n    root_path = \"\"\n\n  [plugins.\"io.containerd.tracing.processor.v1.otlp\"]\n    endpoint = \"\"\n    insecure = false\n    protocol = \"\"\n\n[proxy_plugins]\n\n[stream_processors]\n\n  [stream_processors.\"io.containerd.ocicrypt.decoder.v1.tar\"]\n    accepts = [\"application/vnd.oci.image.layer.v1.tar+encrypted\"]\n    args = [\"--decryption-keys-path\", \"/etc/containerd/ocicrypt/keys\"]\n    env = [\"OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf\"]\n    path = \"ctd-decoder\"\n    returns = \"application/vnd.oci.image.layer.v1.tar\"\n\n  [stream_processors.\"io.containerd.ocicrypt.decoder.v1.tar.gzip\"]\n    accepts = [\"application/vnd.oci.image.layer.v1.tar+gzip+encrypted\"]\n    args = [\"--decryption-keys-path\", \"/etc/containerd/ocicrypt/keys\"]\n    env = [\"OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf\"]\n    path = \"ctd-decoder\"\n    returns = \"application/vnd.oci.image.layer.v1.tar+gzip\"\n\n[timeouts]\n  \"io.containerd.timeout.bolt.open\" = \"0s\"\n  \"io.containerd.timeout.shim.cleanup\" = \"5s\"\n  \"io.containerd.timeout.shim.load\" = \"5s\"\n  \"io.containerd.timeout.shim.shutdown\" = \"3s\"\n  \"io.containerd.timeout.task.state\" = \"2s\"\n\n[ttrpc]\n  address = \"\"\n  gid = 0\n  uid = 0", "stdout_lines": ["disabled_plugins = []", "imports = []", "oom_score = 0", "plugin_dir = \"\"", "required_plugins = []", "root = \"/var/lib/containerd\"", "state = \"/run/containerd\"", "temp = \"\"", "version = 2", "", "[cgroup]", "  path = \"\"", "", "[debug]", "  address = \"\"", "  format = \"\"", "  gid = 0", "  level = \"\"", "  uid = 0", "", "[grpc]", "  address = \"/run/containerd/containerd.sock\"", "  gid = 0", "  max_recv_message_size = 16777216", "  max_send_message_size = 16777216", "  tcp_address = \"\"", "  tcp_tls_ca = \"\"", "  tcp_tls_cert = \"\"", "  tcp_tls_key = \"\"", "  uid = 0", "", "[metrics]", "  address = \"\"", "  grpc_histogram = false", "", "[plugins]", "", "  [plugins.\"io.containerd.gc.v1.scheduler\"]", "    deletion_threshold = 0", "    mutation_threshold = 100", "    pause_threshold = 0.02", "    schedule_delay = \"0s\"", "    startup_delay = \"100ms\"", "", "  [plugins.\"io.containerd.grpc.v1.cri\"]", "    device_ownership_from_security_context = false", "    disable_apparmor = false", "    disable_cgroup = false", "    disable_hugetlb_controller = true", "    disable_proc_mount = false", "    disable_tcp_service = true", "    enable_selinux = false", "    enable_tls_streaming = false", "    enable_unprivileged_icmp = false", "    enable_unprivileged_ports = false", "    ignore_image_defined_volumes = false", "    max_concurrent_downloads = 3", "    max_container_log_line_size = 16384", "    netns_mounts_under_state_dir = false", "    restrict_oom_score_adj = false", "    sandbox_image = \"k8s.gcr.io/pause:3.6\"", "    selinux_category_range = 1024", "    stats_collect_period = 10", "    stream_idle_timeout = \"4h0m0s\"", "    stream_server_address = \"127.0.0.1\"", "    stream_server_port = \"0\"", "    systemd_cgroup = false", "    tolerate_missing_hugetlb_controller = true", "    unset_seccomp_profile = \"\"", "", "    [plugins.\"io.containerd.grpc.v1.cri\".cni]", "      bin_dir = \"/opt/cni/bin\"", "      conf_dir = \"/etc/cni/net.d\"", "      conf_template = \"\"", "      ip_pref = \"\"", "      max_conf_num = 1", "", "    [plugins.\"io.containerd.grpc.v1.cri\".containerd]", "      default_runtime_name = \"runc\"", "      disable_snapshot_annotations = true", "      discard_unpacked_layers = false", "      ignore_rdt_not_enabled_errors = false", "      no_pivot = false", "      snapshotter = \"overlayfs\"", "", "      [plugins.\"io.containerd.grpc.v1.cri\".containerd.default_runtime]", "        base_runtime_spec = \"\"", "        cni_conf_dir = \"\"", "        cni_max_conf_num = 0", "        container_annotations = []", "        pod_annotations = []", "        privileged_without_host_devices = false", "        runtime_engine = \"\"", "        runtime_path = \"\"", "        runtime_root = \"\"", "        runtime_type = \"\"", "", "        [plugins.\"io.containerd.grpc.v1.cri\".containerd.default_runtime.options]", "", "      [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes]", "", "        [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc]", "          base_runtime_spec = \"\"", "          cni_conf_dir = \"\"", "          cni_max_conf_num = 0", "          container_annotations = []", "          pod_annotations = []", "          privileged_without_host_devices = false", "          runtime_engine = \"\"", "          runtime_path = \"\"", "          runtime_root = \"\"", "          runtime_type = \"io.containerd.runc.v2\"", "", "          [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]", "            BinaryName = \"\"", "            CriuImagePath = \"\"", "            CriuPath = \"\"", "            CriuWorkPath = \"\"", "            IoGid = 0", "            IoUid = 0", "            NoNewKeyring = false", "            NoPivotRoot = false", "            Root = \"\"", "            ShimCgroup = \"\"", "            SystemdCgroup = false", "", "      [plugins.\"io.containerd.grpc.v1.cri\".containerd.untrusted_workload_runtime]", "        base_runtime_spec = \"\"", "        cni_conf_dir = \"\"", "        cni_max_conf_num = 0", "        container_annotations = []", "        pod_annotations = []", "        privileged_without_host_devices = false", "        runtime_engine = \"\"", "        runtime_path = \"\"", "        runtime_root = \"\"", "        runtime_type = \"\"", "", "        [plugins.\"io.containerd.grpc.v1.cri\".containerd.untrusted_workload_runtime.options]", "", "    [plugins.\"io.containerd.grpc.v1.cri\".image_decryption]", "      key_model = \"node\"", "", "    [plugins.\"io.containerd.grpc.v1.cri\".registry]", "      config_path = \"\"", "", "      [plugins.\"io.containerd.grpc.v1.cri\".registry.auths]", "", "      [plugins.\"io.containerd.grpc.v1.cri\".registry.configs]", "", "      [plugins.\"io.containerd.grpc.v1.cri\".registry.headers]", "", "      [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors]", "", "    [plugins.\"io.containerd.grpc.v1.cri\".x509_key_pair_streaming]", "      tls_cert_file = \"\"", "      tls_key_file = \"\"", "", "  [plugins.\"io.containerd.internal.v1.opt\"]", "    path = \"/opt/containerd\"", "", "  [plugins.\"io.containerd.internal.v1.restart\"]", "    interval = \"10s\"", "", "  [plugins.\"io.containerd.internal.v1.tracing\"]", "    sampling_ratio = 1.0", "    service_name = \"containerd\"", "", "  [plugins.\"io.containerd.metadata.v1.bolt\"]", "    content_sharing_policy = \"shared\"", "", "  [plugins.\"io.containerd.monitor.v1.cgroups\"]", "    no_prometheus = false", "", "  [plugins.\"io.containerd.runtime.v1.linux\"]", "    no_shim = false", "    runtime = \"runc\"", "    runtime_root = \"\"", "    shim = \"containerd-shim\"", "    shim_debug = false", "", "  [plugins.\"io.containerd.runtime.v2.task\"]", "    platforms = [\"linux/amd64\"]", "    sched_core = false", "", "  [plugins.\"io.containerd.service.v1.diff-service\"]", "    default = [\"walking\"]", "", "  [plugins.\"io.containerd.service.v1.tasks-service\"]", "    rdt_config_file = \"\"", "", "  [plugins.\"io.containerd.snapshotter.v1.aufs\"]", "    root_path = \"\"", "", "  [plugins.\"io.containerd.snapshotter.v1.btrfs\"]", "    root_path = \"\"", "", "  [plugins.\"io.containerd.snapshotter.v1.devmapper\"]", "    async_remove = false", "    base_image_size = \"\"", "    discard_blocks = false", "    fs_options = \"\"", "    fs_type = \"\"", "    pool_name = \"\"", "    root_path = \"\"", "", "  [plugins.\"io.containerd.snapshotter.v1.native\"]", "    root_path = \"\"", "", "  [plugins.\"io.containerd.snapshotter.v1.overlayfs\"]", "    root_path = \"\"", "    upperdir_label = false", "", "  [plugins.\"io.containerd.snapshotter.v1.zfs\"]", "    root_path = \"\"", "", "  [plugins.\"io.containerd.tracing.processor.v1.otlp\"]", "    endpoint = \"\"", "    insecure = false", "    protocol = \"\"", "", "[proxy_plugins]", "", "[stream_processors]", "", "  [stream_processors.\"io.containerd.ocicrypt.decoder.v1.tar\"]", "    accepts = [\"application/vnd.oci.image.layer.v1.tar+encrypted\"]", "    args = [\"--decryption-keys-path\", \"/etc/containerd/ocicrypt/keys\"]", "    env = [\"OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf\"]", "    path = \"ctd-decoder\"", "    returns = \"application/vnd.oci.image.layer.v1.tar\"", "", "  [stream_processors.\"io.containerd.ocicrypt.decoder.v1.tar.gzip\"]", "    accepts = [\"application/vnd.oci.image.layer.v1.tar+gzip+encrypted\"]", "    args = [\"--decryption-keys-path\", \"/etc/containerd/ocicrypt/keys\"]", "    env = [\"OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf\"]", "    path = \"ctd-decoder\"", "    returns = \"application/vnd.oci.image.layer.v1.tar+gzip\"", "", "[timeouts]", "  \"io.containerd.timeout.bolt.open\" = \"0s\"", "  \"io.containerd.timeout.shim.cleanup\" = \"5s\"", "  \"io.containerd.timeout.shim.load\" = \"5s\"", "  \"io.containerd.timeout.shim.shutdown\" = \"3s\"", "  \"io.containerd.timeout.task.state\" = \"2s\"", "", "[ttrpc]", "  address = \"\"", "  gid = 0", "  uid = 0"]}

TASK [Update containerd config] ************************************************
changed: [master] => {"changed": true, "msg": "1 replacements made", "rc": 0}

TASK [Set sandbox image in containerd config] **********************************
changed: [master] => {"changed": true, "msg": "1 replacements made", "rc": 0}

TASK [Restart containerd] ******************************************************
changed: [master] => {"changed": true, "name": "containerd", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestamp": "Wed 2024-07-31 20:29:03 UTC", "ActiveEnterTimestampMonotonic": "55715924", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "local-fs.target systemd-journald.socket sysinit.target system.slice network.target basic.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Wed 2024-07-31 20:29:03 UTC", "AssertTimestampMonotonic": "55623357", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "126737000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Wed 2024-07-31 20:29:03 UTC", "ConditionTimestampMonotonic": "55623354", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/containerd.service", "ControlGroupId": "5090", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "yes", "DelegateControllers": "cpu cpuset io memory pids", "Description": "containerd container runtime", "DevicePolicy": "auto", "Documentation": "https://containerd.io", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "3644", "ExecMainStartTimestamp": "Wed 2024-07-31 20:29:03 UTC", "ExecMainStartTimestampMonotonic": "55632696", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; ignore_errors=no ; start_time=[Wed 2024-07-31 20:29:03 UTC] ; stop_time=[n/a] ; pid=3644 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; flags= ; start_time=[Wed 2024-07-31 20:29:03 UTC] ; stop_time=[n/a] ; pid=3644 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; ignore_errors=yes ; start_time=[Wed 2024-07-31 20:29:03 UTC] ; stop_time=[Wed 2024-07-31 20:29:03 UTC] ; pid=3643 ; code=exited ; status=0 }", "ExecStartPreEx": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; flags=ignore-failure ; start_time=[Wed 2024-07-31 20:29:03 UTC] ; stop_time=[Wed 2024-07-31 20:29:03 UTC] ; pid=3643 ; code=exited ; status=0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/containerd.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "containerd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Wed 2024-07-31 20:29:03 UTC", "InactiveExitTimestampMonotonic": "55625819", "InvocationID": "c3bda9d6548c4c0fb4c6bfe6aa44f50c", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "process", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "infinity", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "infinity", "LimitMEMLOCKSoft": "infinity", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "65535", "LimitNOFILESoft": "65535", "LimitNPROC": "infinity", "LimitNPROCSoft": "infinity", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30446", "LimitSIGPENDINGSoft": "30446", "LimitSTACK": "10485760", "LimitSTACKSoft": "10485760", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "3644", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "19451904", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "containerd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "continue", "OOMScoreAdjust": "-999", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "5s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Wed 2024-07-31 20:29:03 UTC", "StateChangeTimestampMonotonic": "55715924", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "9", "TasksMax": "infinity", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}

TASK [Set SELinux in permissive mode] ******************************************
ok: [master] => {"changed": false, "configfile": "/etc/selinux/config", "msg": "", "policy": "targeted", "reboot_required": false, "state": "permissive"}

TASK [Ensure SELinux is in permissive mode on reboot] **************************
ok: [master] => {"changed": false, "msg": "", "rc": 0}

TASK [Add Kubernetes yum repository without exclude] ***************************
changed: [master] => {"changed": true, "checksum": "0da9ad1eff06701cfd3bcb1a457afc549f0b8df4", "dest": "/etc/yum.repos.d/kubernetes.repo", "gid": 0, "group": "root", "md5sum": "764a81ed6a72dda13995e1c724946b77", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:system_conf_t:s0", "size": 178, "src": "/home/ec2-user/.ansible/tmp/ansible-tmp-1722457760.5701873-159325-186483634812562/source", "state": "file", "uid": 0}

TASK [Install Kubernetes packages] *********************************************
changed: [master] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: socat-1.7.4.2-1.amzn2023.0.2.x86_64", "Installed: kubectl-1.30.3-150500.1.1.x86_64", "Installed: libnftnl-1.2.2-2.amzn2023.0.2.x86_64", "Installed: iptables-libs-1.8.8-3.amzn2023.0.2.x86_64", "Installed: iptables-nft-1.8.8-3.amzn2023.0.2.x86_64", "Installed: kubeadm-1.30.3-150500.1.1.x86_64", "Installed: libnetfilter_conntrack-1.0.8-2.amzn2023.0.2.x86_64", "Installed: kubelet-1.30.3-150500.1.1.x86_64", "Installed: libnetfilter_cthelper-1.0.0-21.amzn2023.0.2.x86_64", "Installed: kubernetes-cni-1.4.0-150500.1.1.x86_64", "Installed: libnetfilter_cttimeout-1.0.0-19.amzn2023.0.2.x86_64", "Installed: cri-tools-1.30.0-150500.1.1.x86_64", "Installed: libnetfilter_queue-1.0.5-2.amzn2023.0.2.x86_64", "Installed: libnfnetlink-1.0.1-19.amzn2023.0.2.x86_64", "Installed: conntrack-tools-1.4.6-2.amzn2023.0.2.x86_64"]}

TASK [Add exclude parameter to Kubernetes yum repository] **********************
changed: [master] => {"backup": "", "changed": true, "msg": "line added"}

TASK [Enable and start kubelet] ************************************************
changed: [master] => {"changed": true, "enabled": true, "name": "kubelet", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "network-online.target system.slice basic.target systemd-journald.socket sysinit.target", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "0", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "kubelet: The Kubernetes Node Agent", "DevicePolicy": "auto", "Documentation": "https://kubernetes.io/docs/", "DropInPaths": "/usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf", "DynamicUser": "no", "Environment": "\"KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf\" KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml", "EnvironmentFiles": "/etc/sysconfig/kubelet (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/kubelet ; argv[]=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/kubelet ; argv[]=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/kubelet.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "infinity", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "infinity", "LimitMEMLOCKSoft": "infinity", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "65535", "LimitNOFILESoft": "65535", "LimitNPROC": "infinity", "LimitNPROCSoft": "infinity", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30446", "LimitSIGPENDINGSoft": "30446", "LimitSTACK": "10485760", "LimitSTACKSoft": "10485760", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "0", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "4567", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "UtmpMode": "init", "Wants": "network-online.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}

TASK [Install iproute-tc package] **********************************************
changed: [master] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: iproute-tc-5.10.0-2.amzn2023.0.5.x86_64"]}

TASK [Ensure the hostname is resolvable] ***************************************
changed: [master] => {"backup": "", "changed": true, "msg": "line added"}

TASK [Pre-pull Kubernetes images] **********************************************
changed: [master] => {"changed": true, "cmd": ["kubeadm", "config", "images", "pull", "--kubernetes-version", "v1.30.2"], "delta": "0:00:25.126885", "end": "2024-07-31 20:30:11.286754", "msg": "", "rc": 0, "start": "2024-07-31 20:29:46.159869", "stderr": "", "stderr_lines": [], "stdout": "[config/images] Pulled registry.k8s.io/kube-apiserver:v1.30.2\n[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.30.2\n[config/images] Pulled registry.k8s.io/kube-scheduler:v1.30.2\n[config/images] Pulled registry.k8s.io/kube-proxy:v1.30.2\n[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.1\n[config/images] Pulled registry.k8s.io/pause:3.9\n[config/images] Pulled registry.k8s.io/etcd:3.5.12-0", "stdout_lines": ["[config/images] Pulled registry.k8s.io/kube-apiserver:v1.30.2", "[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.30.2", "[config/images] Pulled registry.k8s.io/kube-scheduler:v1.30.2", "[config/images] Pulled registry.k8s.io/kube-proxy:v1.30.2", "[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.1", "[config/images] Pulled registry.k8s.io/pause:3.9", "[config/images] Pulled registry.k8s.io/etcd:3.5.12-0"]}

TASK [Initialize Kubernetes cluster] *******************************************
changed: [master] => {"changed": true, "cmd": ["kubeadm", "init", "--apiserver-advertise-address=10.1.1.225", "--apiserver-cert-extra-sans=10.1.1.225", "--pod-network-cidr=10.244.0.0/16", "--node-name", "master", "--ignore-preflight-errors", "Swap"], "delta": "0:00:36.643530", "end": "2024-07-31 20:30:48.728338", "msg": "", "rc": 0, "start": "2024-07-31 20:30:12.084808", "stderr": "W0731 20:30:12.758828   29529 checks.go:844] detected that the sandbox image \"registry.k8s.io/pause:3.2\" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use \"registry.k8s.io/pause:3.9\" as the CRI sandbox image.", "stderr_lines": ["W0731 20:30:12.758828   29529 checks.go:844] detected that the sandbox image \"registry.k8s.io/pause:3.2\" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use \"registry.k8s.io/pause:3.9\" as the CRI sandbox image."], "stdout": "[init] Using Kubernetes version: v1.30.3\n[preflight] Running pre-flight checks\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n[certs] Using certificateDir folder \"/etc/kubernetes/pki\"\n[certs] Generating \"ca\" certificate and key\n[certs] Generating \"apiserver\" certificate and key\n[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local master] and IPs [10.96.0.1 10.1.1.225]\n[certs] Generating \"apiserver-kubelet-client\" certificate and key\n[certs] Generating \"front-proxy-ca\" certificate and key\n[certs] Generating \"front-proxy-client\" certificate and key\n[certs] Generating \"etcd/ca\" certificate and key\n[certs] Generating \"etcd/server\" certificate and key\n[certs] etcd/server serving cert is signed for DNS names [localhost master] and IPs [10.1.1.225 127.0.0.1 ::1]\n[certs] Generating \"etcd/peer\" certificate and key\n[certs] etcd/peer serving cert is signed for DNS names [localhost master] and IPs [10.1.1.225 127.0.0.1 ::1]\n[certs] Generating \"etcd/healthcheck-client\" certificate and key\n[certs] Generating \"apiserver-etcd-client\" certificate and key\n[certs] Generating \"sa\" key and public key\n[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\n[kubeconfig] Writing \"super-admin.conf\" kubeconfig file\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n[etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"\n[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n[control-plane] Creating static Pod manifest for \"kube-apiserver\"\n[control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n[control-plane] Creating static Pod manifest for \"kube-scheduler\"\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Starting the kubelet\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\"\n[kubelet-check] Waiting for a healthy kubelet. This can take up to 4m0s\n[kubelet-check] The kubelet is healthy after 1.501395367s\n[api-check] Waiting for a healthy API server. This can take up to 4m0s\n[api-check] The API server is healthy after 12.501629435s\n[upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n[kubelet] Creating a ConfigMap \"kubelet-config\" in namespace kube-system with the configuration for the kubelets in the cluster\n[upload-certs] Skipping phase. Please see --upload-certs\n[mark-control-plane] Marking the node master as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]\n[mark-control-plane] Marking the node master as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]\n[bootstrap-token] Using token: rv317s.0p9fi961k450hayg\n[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes\n[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n[kubelet-finalize] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key\n[addons] Applied essential addon: CoreDNS\n[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nAlternatively, if you are the root user, you can run:\n\n  export KUBECONFIG=/etc/kubernetes/admin.conf\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 10.1.1.225:6443 --token rv317s.0p9fi961k450hayg \\\n\t--discovery-token-ca-cert-hash sha256:256efec5e3020f08b12d21fdba30eb68b34b1e7f1b25f00bf27ac3bb4d85f23f ", "stdout_lines": ["[init] Using Kubernetes version: v1.30.3", "[preflight] Running pre-flight checks", "[preflight] Pulling images required for setting up a Kubernetes cluster", "[preflight] This might take a minute or two, depending on the speed of your internet connection", "[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'", "[certs] Using certificateDir folder \"/etc/kubernetes/pki\"", "[certs] Generating \"ca\" certificate and key", "[certs] Generating \"apiserver\" certificate and key", "[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local master] and IPs [10.96.0.1 10.1.1.225]", "[certs] Generating \"apiserver-kubelet-client\" certificate and key", "[certs] Generating \"front-proxy-ca\" certificate and key", "[certs] Generating \"front-proxy-client\" certificate and key", "[certs] Generating \"etcd/ca\" certificate and key", "[certs] Generating \"etcd/server\" certificate and key", "[certs] etcd/server serving cert is signed for DNS names [localhost master] and IPs [10.1.1.225 127.0.0.1 ::1]", "[certs] Generating \"etcd/peer\" certificate and key", "[certs] etcd/peer serving cert is signed for DNS names [localhost master] and IPs [10.1.1.225 127.0.0.1 ::1]", "[certs] Generating \"etcd/healthcheck-client\" certificate and key", "[certs] Generating \"apiserver-etcd-client\" certificate and key", "[certs] Generating \"sa\" key and public key", "[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"", "[kubeconfig] Writing \"admin.conf\" kubeconfig file", "[kubeconfig] Writing \"super-admin.conf\" kubeconfig file", "[kubeconfig] Writing \"kubelet.conf\" kubeconfig file", "[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file", "[kubeconfig] Writing \"scheduler.conf\" kubeconfig file", "[etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"", "[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"", "[control-plane] Creating static Pod manifest for \"kube-apiserver\"", "[control-plane] Creating static Pod manifest for \"kube-controller-manager\"", "[control-plane] Creating static Pod manifest for \"kube-scheduler\"", "[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"", "[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"", "[kubelet-start] Starting the kubelet", "[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\"", "[kubelet-check] Waiting for a healthy kubelet. This can take up to 4m0s", "[kubelet-check] The kubelet is healthy after 1.501395367s", "[api-check] Waiting for a healthy API server. This can take up to 4m0s", "[api-check] The API server is healthy after 12.501629435s", "[upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace", "[kubelet] Creating a ConfigMap \"kubelet-config\" in namespace kube-system with the configuration for the kubelets in the cluster", "[upload-certs] Skipping phase. Please see --upload-certs", "[mark-control-plane] Marking the node master as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]", "[mark-control-plane] Marking the node master as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]", "[bootstrap-token] Using token: rv317s.0p9fi961k450hayg", "[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles", "[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes", "[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials", "[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token", "[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster", "[bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace", "[kubelet-finalize] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key", "[addons] Applied essential addon: CoreDNS", "[addons] Applied essential addon: kube-proxy", "", "Your Kubernetes control-plane has initialized successfully!", "", "To start using your cluster, you need to run the following as a regular user:", "", "  mkdir -p $HOME/.kube", "  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config", "  sudo chown $(id -u):$(id -g) $HOME/.kube/config", "", "Alternatively, if you are the root user, you can run:", "", "  export KUBECONFIG=/etc/kubernetes/admin.conf", "", "You should now deploy a pod network to the cluster.", "Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:", "  https://kubernetes.io/docs/concepts/cluster-administration/addons/", "", "Then you can join any number of worker nodes by running the following on each as root:", "", "kubeadm join 10.1.1.225:6443 --token rv317s.0p9fi961k450hayg \\", "\t--discovery-token-ca-cert-hash sha256:256efec5e3020f08b12d21fdba30eb68b34b1e7f1b25f00bf27ac3bb4d85f23f "]}

TASK [Configure kubectl for the master node] ***********************************
changed: [master] => {"changed": true, "cmd": "sudo mkdir -p /root/.kube\nsudo cp -i /etc/kubernetes/admin.conf /root/.kube/config\nsudo chown $(id -u):$(id -g) /root/.kube/config\nexport KUBECONFIG=/root/.kube/config\nkubectl get nodes\n", "delta": "0:00:00.486800", "end": "2024-07-31 20:30:50.338621", "msg": "", "rc": 0, "start": "2024-07-31 20:30:49.851821", "stderr": "", "stderr_lines": [], "stdout": "NAME     STATUS     ROLES           AGE   VERSION\nmaster   NotReady   control-plane   3s    v1.30.3", "stdout_lines": ["NAME     STATUS     ROLES           AGE   VERSION", "master   NotReady   control-plane   3s    v1.30.3"]}

TASK [Apply Calico network plugin] *********************************************
changed: [master] => {"changed": true, "cmd": "kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml\n", "delta": "0:00:01.963232", "end": "2024-07-31 20:30:53.124432", "msg": "", "rc": 0, "start": "2024-07-31 20:30:51.161200", "stderr": "", "stderr_lines": [], "stdout": "poddisruptionbudget.policy/calico-kube-controllers created\nserviceaccount/calico-kube-controllers created\nserviceaccount/calico-node created\nconfigmap/calico-config created\ncustomresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created\nclusterrole.rbac.authorization.k8s.io/calico-kube-controllers created\nclusterrole.rbac.authorization.k8s.io/calico-node created\nclusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created\nclusterrolebinding.rbac.authorization.k8s.io/calico-node created\ndaemonset.apps/calico-node created\ndeployment.apps/calico-kube-controllers created", "stdout_lines": ["poddisruptionbudget.policy/calico-kube-controllers created", "serviceaccount/calico-kube-controllers created", "serviceaccount/calico-node created", "configmap/calico-config created", "customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created", "customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created", "clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created", "clusterrole.rbac.authorization.k8s.io/calico-node created", "clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created", "clusterrolebinding.rbac.authorization.k8s.io/calico-node created", "daemonset.apps/calico-node created", "deployment.apps/calico-kube-controllers created"]}

TASK [Retrieve worker join command] ********************************************
changed: [master] => {"changed": true, "cmd": "kubeadm token create --print-join-command > /tmp/join_command.sh\n", "delta": "0:00:00.095904", "end": "2024-07-31 20:30:54.218463", "msg": "", "rc": 0, "start": "2024-07-31 20:30:54.122559", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Pull the join command to the admin server using private IP] **************
changed: [master -> localhost] => {"changed": true, "cmd": "scp -o StrictHostKeyChecking=no -i /home/ec2-user/.ssh/my-key-pair ec2-user@10.1.1.225:/tmp/join_command.sh /home/ec2-user/devops_setup/terraform/join_command.sh\n", "delta": "0:00:00.469979", "end": "2024-07-31 20:30:55.208138", "msg": "", "rc": 0, "start": "2024-07-31 20:30:54.738159", "stderr": "Warning: Permanently added '10.1.1.225' (ED25519) to the list of known hosts.", "stderr_lines": ["Warning: Permanently added '10.1.1.225' (ED25519) to the list of known hosts."], "stdout": "", "stdout_lines": []}

TASK [Print fetch result] ******************************************************
ok: [master -> localhost] => {
    "fetch_result": {
        "changed": true,
        "cmd": "scp -o StrictHostKeyChecking=no -i /home/ec2-user/.ssh/my-key-pair ec2-user@10.1.1.225:/tmp/join_command.sh /home/ec2-user/devops_setup/terraform/join_command.sh\n",
        "delta": "0:00:00.469979",
        "end": "2024-07-31 20:30:55.208138",
        "failed": false,
        "msg": "",
        "rc": 0,
        "start": "2024-07-31 20:30:54.738159",
        "stderr": "Warning: Permanently added '10.1.1.225' (ED25519) to the list of known hosts.",
        "stderr_lines": [
            "Warning: Permanently added '10.1.1.225' (ED25519) to the list of known hosts."
        ],
        "stdout": "",
        "stdout_lines": []
    }
}

PLAY RECAP *********************************************************************
master                     : ok=41   changed=32   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

