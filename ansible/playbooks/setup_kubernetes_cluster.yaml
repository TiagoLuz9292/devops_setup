---
- name: Setup Kubernetes Cluster
  hosts: all
  become: yes

  tasks:
    - name: Update all packages
      dnf:
        name: "*"
        state: latest
        update_cache: yes

    - name: Disable swap
      command: swapoff -a

    - name: Disable swap permanently
      cron:
        name: "Disable swap on reboot"
        special_time: reboot
        job: "/sbin/swapoff -a"

    - name: Load kernel modules
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Load kernel modules immediately
      command: modprobe overlay
    - command: modprobe br_netfilter

    - name: Set system configurations for Kubernetes
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1

    - name: Apply sysctl params without reboot
      command: sysctl --system

    - name: Install containerd
      block:
        - name: Download containerd
          get_url:
            url: "https://github.com/containerd/containerd/releases/download/v1.6.2/containerd-1.6.2-linux-amd64.tar.gz"
            dest: "/tmp/containerd-1.6.2-linux-amd64.tar.gz"

        - name: Verify containerd checksum
          shell: "sha256sum -c /tmp/containerd-1.6.2-linux-amd64.tar.gz.sha256sum"

        - name: Extract containerd
          unarchive:
            src: "/tmp/containerd-1.6.2-linux-amd64.tar.gz"
            dest: "/usr/local"
            remote_src: yes

        - name: Install containerd service
          get_url:
            url: "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
            dest: "/etc/systemd/system/containerd.service"

        - name: Enable and start containerd
          systemd:
            name: containerd
            enabled: yes
            state: started

    - name: Install runc
      block:
        - name: Download runc
          get_url:
            url: "https://github.com/opencontainers/runc/releases/download/v1.1.9/runc.amd64"
            dest: "/usr/local/sbin/runc"
            mode: '0755'

        - name: Verify runc checksum
          shell: "sha256sum -c /tmp/runc.amd64.sha256sum"

    - name: Install CNI plugins
      block:
        - name: Download CNI plugins
          get_url:
            url: "https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz"
            dest: "/tmp/cni-plugins-linux-amd64-v1.1.1.tgz"

        - name: Extract CNI plugins
          unarchive:
            src: "/tmp/cni-plugins-linux-amd64-v1.1.1.tgz"
            dest: "/opt/cni/bin"
            remote_src: yes

    - name: Configure containerd
      block:
        - name: Create containerd config directory
          file:
            path: /etc/containerd
            state: directory

        - name: Generate default containerd config
          shell: "containerd config default | tee /etc/containerd/config.toml"

        - name: Update containerd config
          replace:
            path: /etc/containerd/config.toml
            regexp: 'SystemdCgroup = false'
            replace: 'SystemdCgroup = true'

        - name: Set sandbox image
          replace:
            path: /etc/containerd/config.toml
            regexp: 'sandbox_image = "k8s.gcr.io/pause:3.2"'
            replace: 'sandbox_image = "registry.k8s.io/pause:3.2"'

        - name: Restart containerd
          systemd:
            name: containerd
            state: restarted

    - name: Set SELinux to permissive mode
      block:
        - name: Set SELinux in permissive mode
          selinux:
            policy: targeted
            state: permissive

        - name: Ensure SELinux is in permissive mode on reboot
          replace:
            path: /etc/selinux/config
            regexp: '^SELINUX=enforcing'
            replace: 'SELINUX=permissive'

    - name: Add Kubernetes repository
      copy:
        dest: /etc/yum.repos.d/kubernetes.repo
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key
          exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni

    - name: Install Kubernetes packages
      dnf:
        name: 
          - kubelet
          - kubeadm
          - kubectl
        state: present
        exclude:
          - kubelet
          - kubeadm
          - kubectl
          - cri-tools
          - kubernetes-cni

    - name: Enable and start kubelet
      systemd:
        name: kubelet
        enabled: yes

    